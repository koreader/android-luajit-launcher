apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion compileSdk

    defaultConfig {
        applicationId "org.koreader.launcher"
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        versionCode versCode as Integer
        versionName versName
    }

    buildTypes {
        release {
            manifestPlaceholders.APP_NAME = projectName
            buildConfigField 'String', 'APP_NAME', '"' + projectName + '"'
            minifyEnabled true
            shrinkResources true
        }

        debug {
            manifestPlaceholders.APP_NAME = projectName + "-debug"
            buildConfigField 'String', 'APP_NAME', '"' + projectName + '-debug"'
            minifyEnabled false
            debuggable true
        }
    }

    sourceSets {
        main {
            manifest.srcFile('manifest/base.xml')
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = [ '../assets' ]
        }
        rocks {
            manifest.srcFile('manifest/rocks.xml')
            java.srcDirs = ['rocks']
        }
        fdroid {
            java.srcDirs = ['fdroid']
        }
    }

    flavorDimensions 'ABI', 'CHANNEL'
    productFlavors {
        x86 {
            ndk { abiFilters "x86" }
            dimension = 'ABI'
        }
        x86_64 {
            ndk { abiFilters "x86_64" }
            dimension = 'ABI'
            minSdkVersion = min64Sdk
        }
        arm {
            ndk { abiFilters "armeabi-v7a" }
            dimension = 'ABI'
        }
        arm64 {
            ndk { abiFilters "arm64-v8a" }
            dimension = 'ABI'
            minSdkVersion = min64Sdk
        }

        fdroid {
            dimension = 'CHANNEL'
        }
        rocks {
            dimension = 'CHANNEL'
        }
    }

    externalNativeBuild {
        ndkBuild {
            path file('../jni/Android.mk')
        }
    }

    lintOptions {
        checkReleaseBuilds true
        abortOnError false
        disable 'PrivateApi'
        disable 'ProtectedPermissions'
        disable 'UnusedAttribute'
        disable 'SetTextI18n'
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "NativeActivity.apk"
        }
    }
}

repositories {
    google()
    jcenter()
    mavenCentral()
}

dependencies {
    implementation "androidx.core:core-ktx:$androidx_core_version"
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.legacy:legacy-support-v4:$androidx_supportv4_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_plugin_version"

    // add Leak Canary on debug variants.
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanary_version"
}
